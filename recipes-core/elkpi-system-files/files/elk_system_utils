#!/bin/sh

if [ "$EUID" -ne 0 ]
  then echo "Please run as root or with sudo permissions"
  exit
fi

case "$1" in

--set-audio-hat)
    if [ "$2" = "elk-pi" ]; then
        sed -i '/AUDIO_HAT=/c\AUDIO_HAT=\"elk-pi\"' /usr/bin/load-drivers
    elif [ "$2" = "hifiberry-dac-plus-adc" ]; then
        sed -i '/AUDIO_HAT=/c\AUDIO_HAT=\"hifi-berry\"' /usr/bin/load-drivers
    elif [ "$2" = "hifiberry-dac-plus-adc-pro" ]; then
        sed -i '/AUDIO_HAT=/c\AUDIO_HAT=\"hifi-berry-pro\"' /usr/bin/load-drivers
    else
        echo "Invalid audio hat $2 specified. Options are :"
        echo "    1. elk-pi (default)"
        echo "    2. hifiberry-dac-plus-adc"
        echo "    3. hifiberry-dac-plus-adc-pro"
        exit 1
    fi
    echo "Using audio hat $2. Please power cycle for changes to take effect.."
    echo "Note! This is persistent accross boot cycles."
    ;;

--set-buffer-size)
    echo "Setting audio buffer size to $2"
    echo "Note! This is persistent accross boot cycles."
    sed -i "/AUDIO_BUFFER_SIZE=/c\AUDIO_BUFFER_SIZE=$2" /usr/bin/load-drivers
    ;;

--reset-boot-count)
    echo "setting boot count to 0 ..."
    mount /dev/mmcblk0p1 /boot
    sleep 1
    fw_setenv boot_count "0" && sync
    sleep 1
    umount /boot
    echo "Done!"
    exit 0;
    ;;

--usb-speed)
    if [ "$2" -ne "1" ]; then
        if [ "$2" -ne "2" ]; then
            echo "Invalid usb speed $2"
            exit 1;
        fi
    fi
    echo "set usb speed to $2 ..."
    mount /dev/mmcblk0p1 /boot
    sleep 1
    if [ "$2" -eq "2" ]; then
        fw_setenv set_boot_args "if test \"\${default_part}\" = \"0\" ;then setenv bootargs 8250.nr_uarts=1 cma=256M  vc_mem.mem_base=0x3ec00000 vc_mem.mem_size=0x40000000  dwc_otg.fiq_enable=0 dwc_otg.fiq_fsm_enable=0 dwc_otg.nak_holdoff=0 dwc_otg.lpm_enable=0 console=ttyS0,57600 root=/dev/mmcblk0p2 rootfstype=ext4 rootwait xenomai.allowed_group=2004; setenv kimage uImage0; else setenv bootargs 8250.nr_uarts=1 cma=256M  vc_mem.mem_base=0x3ec00000 vc_mem.mem_size=0x40000000  dwc_otg.fiq_enable=0 dwc_otg.fiq_fsm_enable=0 dwc_otg.nak_holdoff=0 dwc_otg.lpm_enable=0 console=ttyS0,57600 root=/dev/mmcblk0p3 rootfstype=ext4 rootwait xenomai.allowed_group=2004; setenv kimage uImage1; fi"
        sync
        sleep 1
        umount /boot
    exit 0;
    fi
    fw_setenv set_boot_args "if test \"\${default_part}\" = \"0\" ;then setenv bootargs 8250.nr_uarts=1 cma=256M  vc_mem.mem_base=0x3ec00000 vc_mem.mem_size=0x40000000  dwc_otg.fiq_enable=0 dwc_otg.fiq_fsm_enable=0 dwc_otg.nak_holdoff=0 dwc_otg.lpm_enable=0 console=ttyS0,57600 root=/dev/mmcblk0p2 rootfstype=ext4 rootwait xenomai.allowed_group=2004 dwc_otg.speed=$2; setenv kimage uImage0; else setenv bootargs 8250.nr_uarts=1 cma=256M  vc_mem.mem_base=0x3ec00000 vc_mem.mem_size=0x40000000  dwc_otg.fiq_enable=0 dwc_otg.fiq_fsm_enable=0 dwc_otg.nak_holdoff=0 dwc_otg.lpm_enable=0 console=ttyS0,57600 root=/dev/mmcblk0p3 rootfstype=ext4 rootwait xenomai.allowed_group=2004 dwc_otg.speed=$2; setenv kimage uImage1; fi"
    sync
    sleep 1
    umount /boot
    echo "Done! Changes will take effect in the next power cycle."
    exit 0;
    ;;

--default-rootfs)
    if [ "$2" -ne "1" ]; then
        if [ "$2" -ne "2" ]; then
            echo "Invalid rootfs partition number $2"
            exit 1;
        fi
    fi

    echo "setting default rootfs partition to $2 ..."
    mount /dev/mmcblk0p1 /boot
    sleep 1

    if [ "$2" -eq "1" ]; then
        fw_setenv default_part "0" && sync
        fw_setenv fallback_part "1" && sync
    else
        fw_setenv default_part "1" && sync
        fw_setenv fallback_part "0" && sync
    fi
    fw_setenv boot_count "0" && sync
    sleep 1
    umount /boot
    echo "Done! Changes will take effect in the next power cycle."
    exit 0;
    ;;

--ro-rootfs)
    if [ "$2" = "enable" ]; then
        echo "setting current partition to read only ..."
        sed -i '/root/{s/\bdefaults\b/ro/}' /etc/fstab
    elif [ "$2" = "disable" ]; then
        echo "setting current partition to read write ..."
        rootfs=`mount | grep "on / type" | cut -d':' -f 2 | cut -d' ' -f 1`
        if [ $rootfs == '/dev/mmcblk0p2' ];then
            mount -o remount,rw /dev/mmcblk0p2 /
        else
            mount -o remount,rw /dev/mmcblk0p3 /
        fi
        sleep 1
        sed -i '/root/{s/\bro\b/defaults/}' /etc/fstab
    else
        echo "wrong option for ro_rootfs. Should be either [enable] or [disable]"
        exit 1;
    fi
    echo "Done! Changes will take effect in the next power cycle."
    ;;

--remount-as-rw)
    echo "Temporily remounting current rootfs as rw"

    rootfs=`mount | grep "on / type" | cut -d':' -f 2 | cut -d' ' -f 1`
    if [ $rootfs == '/dev/mmcblk0p2' ];then
        mount -o remount,rw /dev/mmcblk0p2 /
    else
        mount -o remount,rw /dev/mmcblk0p3 /
    fi

    echo "Done! Note, this is not persistent across boot cycles."
    ;;

--remount-as-ro)
    echo "Temporily remounting current rootfs as ro"

    rootfs=`mount | grep "on / type" | cut -d':' -f 2 | cut -d' ' -f 1`
    if [ $rootfs == '/dev/mmcblk0p2' ];then
        mount -o remount,ro /dev/mmcblk0p2 /
    else
        mount -o remount,ro /dev/mmcblk0p3 /
    fi
    echo "Done! Note, this is not persistent across boot cycles"
    ;;

--set-cpu-speed)
    if [ "$2" -ne "min" ] && [ "$2" -ne "max" ];then
        echo "Invalid CPU Speed specified! Arguments are min and max."
        exit 1;
    fi

    if [ "$2" = "min" ]; then
        echo userspace > /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor
        cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_min_freq > /sys/devices/system/cpu/cpu0/cpufreq/scaling_setspeed
        sed -i 's/max/min/g' /usr/bin/load-drivers
    else
        echo userspace > /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor
        cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_max_freq > /sys/devices/system/cpu/cpu0/cpufreq/scaling_setspeed
        sed -i 's/min/max/g' /usr/bin/load-drivers
    fi
    echo "Set cpu freq to :" && cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_cur_freq
    sync
    echo "Done! Note, This is persistent across boot cycles but not after a SW Update!"
    ;;

*)
    echo ""
    echo "Utilities to tweak the underlying system of Elk Audio OS."
    echo ""
    echo "Usage: sudo elk_system_utils COMMAND [ARG]"
    echo "  example: sudo elk_system_utils --ro-rootfs disable"
    echo ""
    echo ""
    echo "COMMAND"
    echo "  --set-audio-hat [hat]         : Change the audio hat used. Default is
                                  elk-pi. Changes take affect only after a power
                                  cycle and is persistent across boot cycles.
                                  Options are:
                                      1. elk-pi (defualt)
                                      2. hifiberry-dac-plus-adc
                                      3. hifiberry-dac-plus-adc-pro
 
  --set-buffer-size [size]      : Set the audio buffer size. Default is 64.
                                  It should be a power of 2. Changes take affect
                                  only after a power cycle and is persistent
                                  across boot cycles.
 
  --reset-boot-count            : Set the boot count environment variable.
 
  --usb-speed [1, 2]            : Set the usb speed. Perform a power cycle for
                                  changes to take effect.
 
  --default-rootfs [1, 2]       : Set the defualt rootfs partition, which will be
                                  your primary partition. Perform a power cycle
                                  for changes to take effect
 
  --ro-rootfs [enable, disable] : Use this to enable or disable read only permissions
                                  permanently for the current rootfs partition.
                                  Perform a power cycle for changes to
                                  take effect.
 
  --remount-as-ro               : Use this to mount current rootfs partition as
                                  ro. This will not persist across boot cycles.
                                  Use --ro-rootfs enable for that instead.
 
  --remount-as-rw               : Use this to mount current rootfs partition as
                                  rw. This will not persist across boot cycles.
                                  Use --ro-rootfs disable for that instead.
 
  --set-cpu-speed [min, max]    : Use this to set the cpu speed to either minimum
                                  or max(default). This will persist accross
                                  boot cycles but not after a SW Update. To see
                                  what the minimum and maximum frequencies are,
                                  you can run command lscpu"
    exit 0
    ;;

esac